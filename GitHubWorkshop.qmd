---
title: "Git and GitHub"
subtitle: "Workshop: Data Science Tools"
author: "Tyler George, Cornell College"
format: 
  revealjs:
    theme: [default, styles.scss]
    footer: "Data Science Tools   <https://bit.ly/DSToolsGH>"
    incremental: true 
    slide-number: true
    preview-links: false
---

## Create GitHub accounts

You can create a free account at: <https://github.com/>

## Git/GitHub terminology {.smaller}
- repository
- clone
- pull
- commit
- push
- fork
- merge
- master/main
- branch
- fetch

Definitions at: <https://www.pluralsight.com/resources/blog/cloud/git-terms-explained>

## GitHub Workflow

![](imgs/Git-with-GitHub-Workflows.png)

Credit: Robert B Cohen

## How do you...
  * Create a repository
  * Open or view issues
  * Clone a Repository
  * Star a Repository
  * Fork a repository

## GitHub Workflow

![](imgs/Git-with-GitHub-Workflows.png)

Credit: Robert B Cohen

## Follow Along (1/2) {.smaller}
  * Fork the following repository: <https://github.com/stats-tgeorge/G_GH_Workshop_2024>. It is useful to change the title slightly. 
  * Click into the *peoples_bios* folder
  * Click *Add file* and then *create new file* on the right
  * Name your file with your last name, first initial at the top (or your fictional characters name)
    - Example: **George_T.txt**
  * Write you bio in the document
  * Click *Commit changes...* on top right
  * Click *Commit changes*


## Follow Along  (2/2) {.smaller}

  * Navigate back to the main page of your Fork of the repo by clicking its name at the top
  * Now, in the middle of the page, you should see *Contribute*. Click that and then *Open pull request*
  * Click *Create pull request* at the bottom.
  
## Accepting Your Work

- The owner of the repo can accept your pull-request and add your changes to the main repository

- This is just one way to use version control and collaborate on GitHub!


## More Collaboration
- A repo can have many contributors with many different levels of access. Example: <https://github.com/tidyverse/datascience-box>

- Projects can be used to create boards (like Trello) to facilitate effective collaboration

## Revert a change

- Reverting a change is one of the most important features of version control. I'll show this in GitHub Desktop

- How to revert a change to a repository

## Teaching GitHub

::: {.panel-tabset}

### Teaching
  * Git/GitHub need to be learning objectives (Beckman, et. al, 2021)
  * Use it to enhance learning and collaboration
  * Need to give a tasks that necessitates a team
  * Projects and Kanban Boards

### GitHub in Class

![](imgs/LabCycle.png)

:::

## Using GitHub to Teach and More {.smaller}
  * GitHub Classroom. <https://docs.github.com/en/education/manage-coursework-with-github-classroom/teach-with-github-classroom>
  * Cloning others resources (checking license first)
    - DSC 223 <https://dsc223-sb7-2024.github.io/DSC223_S24_website/>
    - STA 362 <https://sta362-sb8-24.github.io/STA362StatLearning/>
    - Originally Clones of Mine Ã‡etinkaya-Rundel sites. <https://mine-cr.com/teaching/>
  * Template Repositories
  * GitHub Actions 
